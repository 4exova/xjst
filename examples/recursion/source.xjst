// Pass
// {
//   "type": "list",
//   "items": [
//     { "value": "test" }
//   ]
// }
// as context

template(this.type === 'list') {
  var res = ['<ul>'];

  for (var i = 0; i < this.items.length; i++) {
    var item = this.items[i];
    // This will temporarily change context's properties (type and ctx)
    res.push(apply({ type: 'item', ctx: item }));
    // And  revert them here
  }

  res.push('</ul>');

  return res.join('');
}

template(this.type === 'item') {
  return '<li>' + this.ctx.value + '</li>';
}
